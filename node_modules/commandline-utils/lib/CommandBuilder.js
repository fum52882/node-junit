var _ = require("underscore");

module.exports = CommandBuilder;

function CommandBuilder(command) {
	this.command = command;
	this.namedArgs = {};
	this.args = [];
};

CommandBuilder.prototype.append = function(value) {
	if (_.isUndefined(value) || value.length <= 0) {
		return this;
	}
	this.args.push(value);
	return this;
};

CommandBuilder.prototype.set = function(name, value, joinChar) {
	if (_.isUndefined(value)) {
		this.namedArgs[name] = "";
		return this;
	}
	if (_.isArray(value)) {
		var join = " ";
		if (!_.isUndefined(joinChar)) {
			join = joinChar;
		}
		this.namedArgs[name] = value.join(join);
	} else {
		this.namedArgs[name] = value;
	}
	return this;
};

CommandBuilder.prototype.build = function() {
	var namedArgsString = _.reduce(this.namedArgs, function(memo, value, name) {
		memo += " -" + name + " " + value;
		return memo;
	}, "");
	namedArgsString = namedArgsString.trimRight();
	var argsString = _.reduce(this.args, function(memo, value) {
		memo += " " + value;
		return memo;
	}, "");
	argsString = argsString.trimRight();
	return this.command += namedArgsString + argsString;
};
